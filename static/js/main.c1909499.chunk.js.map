{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","Good","good","GoodList","goods","map","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleGoods","preparedGoods","reverse","sort","a","b","localeCompare","length","getPreparedGoods","className","onClick","type","cn","active","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,sBACtBC,EAAoB,iBAEpBC,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACX,oBAAI,UAAQ,OAAZ,SAAoBA,KAGhBC,EAAW,SAAC,GAAD,SAAGC,MACZC,KAAI,SAAAH,GAAI,OACZ,cAAC,EAAD,CAAMA,KAAMA,GAAWA,OAmCpB,IAAMI,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EAlCR,SAA0BR,EAA1B,GAA6D,IAA1BI,EAAyB,EAAzBA,UAAWE,EAAc,EAAdA,WACtCG,EAAa,YAAOT,GAE1B,OAAKI,GAAaE,EACTG,EAAcC,WAGnBN,GACFK,EAAcE,MAAK,SAACC,EAAGC,GACrB,OAAQT,GACN,KAAKT,EACH,OAAOW,EACHO,EAAEC,cAAcF,GAChBA,EAAEE,cAAcD,GACtB,KAAKjB,EACH,OAAIgB,EAAEG,SAAWF,EAAEE,OACVT,EACHO,EAAEE,OAASH,EAAEG,OACbH,EAAEG,OAASF,EAAEE,OAGZT,EAAaO,EAAEC,cAAcF,GAAKA,EAAEE,cAAcD,GAE3D,QAAS,OAAO,MAKfJ,GAOHO,CAAiBtB,EAAiB,CAAEU,YAAWE,eAOnD,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaV,IAC5BwB,KAAK,SACLF,UAAWG,IAAG,SACZ,UACA,CAAE,WAAYhB,IAAcT,GAC5B,CAAE0B,OAAQ1B,IANd,iCAWA,wBACEuB,QAAS,kBAAMb,EAAaT,IAC5BuB,KAAK,SACLF,UAAWG,IAAG,SACZ,aACA,CAAE,WAAYhB,IAAcR,GAC5B,CAAEyB,OAAQzB,IANd,4BAWA,wBACEsB,QAAS,WACPX,GAAeD,IAEjBa,KAAK,SACLF,UAAWG,IAAG,SACZ,aACA,CAAE,YAAad,GACf,CAAEe,OAAQf,IARd,sBAaEF,GAAaE,IACb,wBACEY,QA7CI,WACZb,EAAa,IACbE,GAAc,IA4CNY,KAAK,SACLF,UAAU,4BAHZ,sBAWJ,oBAAIA,UAAU,WAAd,SACE,cAAC,EAAD,CAAUjB,MAAOQ,UCzHzBc,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.c1909499.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'Sort alphabetically';\nconst SORT_FIELD_LENGTH = 'Sort by length';\n\nconst Good = ({ good }) => (\n  <li data-cy=\"Good\">{good}</li>\n);\n\nconst GoodList = ({ goods }) => (\n  goods.map(good => (\n    <Good good={good} key={good} />\n  ))\n);\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (!sortField && isReversed) {\n    return preparedGoods.reverse();\n  }\n\n  if (sortField) {\n    preparedGoods.sort((a, b) => {\n      switch (sortField) {\n        case SORT_FIELD_ALPHABET:\n          return isReversed\n            ? b.localeCompare(a)\n            : a.localeCompare(b);\n        case SORT_FIELD_LENGTH:\n          if (a.length !== b.length) {\n            return isReversed\n              ? b.length - a.length\n              : a.length - b.length;\n          }\n\n          return isReversed ? b.localeCompare(a) : a.localeCompare(b);\n\n        default: return 0;\n      }\n    });\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, { sortField, isReversed });\n\n  const reset = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          type=\"button\"\n          className={cn('button',\n            'is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET },\n            { active: SORT_FIELD_ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button',\n            'is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH },\n            { active: SORT_FIELD_LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setIsReversed(!isReversed);\n          }}\n          type=\"button\"\n          className={cn('button',\n            'is-warning',\n            { 'is-light': !isReversed },\n            { active: isReversed })}\n        >\n          Reverse\n        </button>\n\n        {(sortField || isReversed) && (\n          <button\n            onClick={reset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul className=\"GoodList\">\n        <GoodList goods={visibleGoods} />\n      </ul>\n    </div>\n\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}